#Область СлужебныеПроцедурыИФункции

// Процедура выполняет контроль противоречий.
//
Процедура ВыполнитьПредварительныйКонтроль(Отказ)
	
	// Маркировка
	ВестиУчетМаркировкиПродукции = ПолучитьФункциональнуюОпцию("ВестиУчетМаркировкиПродукции");
	Если ВестиУчетМаркировкиПродукции Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
			|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
			|	ТаблицаДокумента.КодМаркировки КАК КодМаркировки
			|ПОМЕСТИТЬ ТаблицаДокумента
			|ИЗ
			|	&ТаблицаДокумента КАК ТаблицаДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаДокумента1.НомерСтроки КАК НомерСтроки,
			|	ТаблицаДокумента1.Номенклатура КАК Номенклатура
			|ИЗ
			|	ТаблицаДокумента КАК ТаблицаДокумента1
			|ГДЕ
			|	ТаблицаДокумента1.Номенклатура.ЭтоМаркированнаяПродукция
			|	И ТаблицаДокумента1.КодМаркировки = """"
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
		Запрос.УстановитьПараметр("ТаблицаДокумента", Товары);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		// Пустой код маркировки.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнен код маркировки ""%1"" в строке %2 списка ""Товары"".'"), 
					ВыборкаИзРезультатаЗапроса.Номенклатура, 
					ВыборкаИзРезультатаЗапроса.НомерСтроки);
				БухгалтерскийУчетСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					"Товары",
					ВыборкаИзРезультатаЗапроса.НомерСтроки,
					"Номенклатура",
					Отказ);
			КонецЦикла;
		КонецЕсли;		
	КонецЕсли;
	// Конец Маркировка
	
КонецПроцедуры

Функция ПодготовитьПараметрыРасчета(ИмяТабличнойЧасти, ДанныеУчетнойПолитики, СчитатьОтДохода = Ложь, УказыватьТочностьЦены = Ложь) Экспорт

	ПараметрыРасчета = ОбработкаТабличныхЧастейКлиентСервер.ШаблонПараметровРасчета();
	
	ПараметрыРасчета.Период = Дата;
	ПараметрыРасчета.Организация = Организация;
	ПараметрыРасчета.СуммаВключаетНалоги = СуммаВключаетНалоги;
	ПараметрыРасчета.БезналичныйРасчет = БезналичныйРасчет;
	ПараметрыРасчета.СчитатьОтДохода = СчитатьОтДохода;
	ПараметрыРасчета.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
	ПараметрыРасчета.Точность = ?(УказыватьТочностьЦены, ТочностьЦены, ПараметрыРасчета.Точность);
	
	Возврат ПараметрыРасчета;
КонецФункции

#КонецОбласти